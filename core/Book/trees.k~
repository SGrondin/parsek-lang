
<type> letter <is> ['a, 'b, 'c, 'd];

(letter -> letter) next = 
  [ ('a -> 'b), ('b -> 'c), ('c -> 'd), ('d -> 'e) ];

({'x letter, 'y letter} -> {}) equal =
  [ ({'x 'a, 'y 'a } -> {}), ({'x 'b, 'y 'b } -> {}), 
    ({'x 'c, 'y 'c } -> {}), ({'x 'd, 'y 'd } -> {}) ];
     
({'x letter, 'y letter} -> {}) greater =
     (... -> {'x $.x :: next, 'y $.y} :: [equal, greater] );

({'x letter, 'y letter} -> {}) eg = [equal, greater];

<type> tree <is> ['empty, 'tree {'value, 'left tree, 'right tree }];

   
 main = {'x 'a, 'y 'k} :: eg;